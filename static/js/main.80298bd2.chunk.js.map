{"version":3,"sources":["component/actions.js","component/usePokeReducer.js","component/PokeContext.js","component/PokeCell.js","component/Loader.js","assets/chevron-arrow-up.svg","component/PokeList.js","component/PokeDetails.js","component/PokeInfo.js","component/MyPokemon.js","component/MyPokemonList.js","component/NotFound.js","assets/Pokeball.svg","assets/Bag.svg","component/Header.js","component/App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["CAPTURE","RELEASE","usePersistedReducer","createPersistedReducer","getCapturedPokemons","capturedPokemons","releasedPokemon","console","log","filter","pokemon","pokeReducer","state","action","type","catchPokemon","nick","releasePokemon","PokeContext","createContext","PokeProvider","props","dispatch","providerVal","capture","release","Provider","value","children","PokeCell","pokeID","String","id","length","Card","className","types","name","Header","Subtitle","Title","Img","src","alt","Footer","Row","map","Col","Loader","Jumbotron","style","Spinner","size","animation","variant","role","PokeList","pokemons","url","useRouteMatch","listPokemon","sort","a","b","p","xs","md","to","textDecoration","Button","onClick","window","scrollTo","top","behavior","chevronUp","PokeDetails","moves","useState","showSuccess","setShowSuccess","handleCloseSuccess","showFailed","setShowFailed","handleCloseFailed","setNick","errorMessage","setErrorMessage","useContext","handleConfirm","e","pid","some","el","preventDefault","sm","Container","t","Math","random","CardColumns","m","Body","move","replace","Modal","show","onHide","backdrop","keyboard","centered","closeButton","Form","onSubmit","Control","placeholder","onChange","target","onKeyPress","key","Text","PokeInfo","useParams","setPokemon","isFetching","setIsFetching","useEffect","fetch","response","json","data","poke","fetchPokemon","MyPokemon","setShow","handleClose","aria-hidden","block","MyPokemonList","myPokeList","NotFound","nCaptured","setNCaptured","page","setPage","morePage","setMorePage","fetchPokemons","offset","results","forEach","includes","temp","infiniteScroll","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","newPage","Navbar","sticky","OverlayTrigger","placement","overlay","Tooltip","Brand","logo","width","height","Collapse","bag","Badge","pill","exact","path","render","pathname","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","process","href","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.80298bd2.chunk.js","sourcesContent":["export const CAPTURE = 'CAPTURE';\r\nexport const RELEASE = 'RELEASE';","import createPersistedReducer from 'use-persisted-reducer';\r\n\r\nimport { CAPTURE, RELEASE} from './actions';\r\n\r\nconst usePersistedReducer = createPersistedReducer('state');\r\n\r\nconst getCapturedPokemons = (capturedPokemons, releasedPokemon) => {\r\n    console.log('filtering pokemon');\r\n    return capturedPokemons.filter(pokemon => pokemon !== releasedPokemon);\r\n}\r\n\r\nconst releasePokemon = (releasedPokemon, state) => ({\r\n    capturedPokemons: getCapturedPokemons(state.capturedPokemons, releasedPokemon)\r\n});\r\n\r\nconst catchPokemon = (pokemon, state) => ({\r\n    capturedPokemons: [...state.capturedPokemons, pokemon]\r\n});\r\n\r\nconst pokeReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case CAPTURE:\r\n            return catchPokemon(action.pokemon, state);\r\n        case RELEASE:\r\n            console.log('releasing' + action.pokemon.nick);\r\n            return releasePokemon(action.pokemon, state);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const usePokeReducer = () =>\r\n    usePersistedReducer(pokeReducer, {\r\n        capturedPokemons: [],\r\n    });","import React, { createContext } from 'react';\r\n\r\nimport { usePokeReducer } from './usePokeReducer';\r\nimport { CAPTURE, RELEASE } from './actions';\r\n\r\nconst PokeContext = createContext();\r\n\r\nconst PokeProvider = (props) => {\r\n    const [state, dispatch] = usePokeReducer();\r\n\r\n    const { capturedPokemons } = state;\r\n\r\n    const capture = (pokemon) => dispatch({ type: CAPTURE, pokemon });\r\n    const release = (pokemon) => dispatch({ type: RELEASE, pokemon });\r\n\r\n    const providerVal = {\r\n        capturedPokemons,\r\n        capture,\r\n        release,\r\n    };\r\n\r\n    return (\r\n        <PokeContext.Provider value={providerVal}>\r\n          {props.children}\r\n        </PokeContext.Provider>\r\n    )\r\n}\r\n\r\nexport { PokeContext, PokeProvider };","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst PokeCell = ({pokemon}) => {\r\n    let pokeID = '#' + ((String(pokemon.id).length === 3)? pokemon.id : ((String(pokemon.id).length === 2)? '0' + pokemon.id : '00' + pokemon.id));\r\n    \r\n    return(\r\n        <>\r\n            <Card className={\"poke-cell poke-\" + pokemon.types[0].type.name + \"-light\"}>\r\n                <Card.Header>\r\n                    <Card.Subtitle className=\"text-adjust\">{pokeID}</Card.Subtitle>\r\n                    <Card.Title className=\"text-center text-uppercase text-adjust\">{pokemon.name}</Card.Title>\r\n                </Card.Header>\r\n                <Card.Img \r\n                    className=\"img-adjust\" \r\n                    src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`} \r\n                    alt={pokemon.name}\r\n                />\r\n                <Card.Footer>\r\n                    <Row>\r\n                        {pokemon.types.map((type) => \r\n                            <Col className=\"text-center\" >\r\n                                <div className={\"text-adjust align-middle poke-type poke-\" + type.type.name}>{type.type.name}</div>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokeCell;","import Spinner from 'react-bootstrap/Spinner';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Jumbotron \r\n            className=\"justify-content-center align-center text-center pt-5\" \r\n            style={{'width' : '100%', 'height' : '100vh'}}\r\n        >\r\n            <Spinner size=\"20rem\" animation=\"grow\" variant=\"danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n            <p className=\"text-center\">Loading data</p>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default Loader;","export default __webpack_public_path__ + \"static/media/chevron-arrow-up.b7926f82.svg\";","import React from 'react';\r\nimport {\r\n    Link,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport PokeCell from './PokeCell';\r\nimport Loader from './Loader';\r\n\r\nimport chevronUp from '../assets/chevron-arrow-up.svg'\r\n\r\nconst PokeList = ({pokemons}) => {\r\n    let { url } = useRouteMatch();\r\n    console.log(url);\r\n    \r\n    const scrollToTop = () => {\r\n        window.scrollTo({top: 0, behavior: 'smooth'})\r\n    }\r\n\r\n    let listPokemon;\r\n    if (pokemons) {\r\n        pokemons.sort(function (a, b) {return a.id - b.id});\r\n        listPokemon = pokemons.map( p => {\r\n            return <>\r\n                    <Col xs={6} md={3} className=\"my-3\" key={p.id}>\r\n                        <Link to={`${url}` + p.id} style={{textDecoration: 'none'}}> \r\n                            <PokeCell \r\n                                pokemon={p}\r\n                            />\r\n                        </Link>\r\n                    </Col>\r\n                </ >;\r\n        });\r\n    }\r\n\r\n    if(!pokemons) return <Loader />\r\n\r\n    return (\r\n        <>\r\n        <Jumbotron className=\"pokedex-cont\">\r\n            <h1 className=\"text-center display-1 text-adjust mark\">Pokemon List</h1>\r\n            <Row>\r\n                {listPokemon}\r\n            </Row>\r\n        </Jumbotron>\r\n            <Button onClick={scrollToTop} className=\"scroll-btn shadow-none drop-shadow\">\r\n                <img src={chevronUp} alt='^' style={{'width': '2em'}} className=\"img-adjust\" />\r\n            </Button>\r\n        </> \r\n    )\r\n};\r\n\r\nexport default PokeList;","import React, { useState, useContext } from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport { PokeContext } from './PokeContext';\r\n\r\nconst PokeDetails = ({pokemon}) => {\r\n    let types = pokemon.types;\r\n    let moves = pokemon.moves;\r\n    let pokeID = '#' + ((String(pokemon.id).length === 3)? pokemon.id : ((String(pokemon.id).length === 2)? '0' + pokemon.id : '00' + pokemon.id));\r\n    \r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const handleCloseSuccess = () => setShowSuccess(false);\r\n    const showModalSuccess = () => {\r\n        setNick(\"\");\r\n        setErrorMessage(\"\");\r\n        setShowSuccess(true);\r\n    }\r\n\r\n    const [showFailed, setShowFailed] = useState(false);\r\n    const handleCloseFailed = () => setShowFailed(false);\r\n    const showModalFailed = () => setShowFailed(true);\r\n\r\n    const catchPokemon = () => {\r\n        let coin = Math.random();\r\n        if (coin < 0.51) {\r\n            showModalSuccess();\r\n        } else {\r\n            showModalFailed();\r\n        }\r\n    }\r\n\r\n    const [nick, setNick] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const { capture,  capturedPokemons } = useContext(PokeContext);\r\n\r\n    const handleConfirm = (e) => {\r\n        const p = {\r\n            id: pokemon.id + '-' + nick,\r\n            nick: nick,\r\n            name: pokemon.name,\r\n            pid: pokemon.id,\r\n            types: pokemon.types\r\n        };\r\n        \r\n        if (capturedPokemons) {\r\n            if (capturedPokemons.some(el => el.nick === p.nick)) {\r\n                setErrorMessage(\"*A \" + pokemon.name + \" called [\" + p.nick + \"] exists, please enter another name\");\r\n                setNick(\"\");\r\n                return\r\n            } else if (!p.nick) {\r\n                setErrorMessage(\"*Please enter a name\");\r\n                setNick(\"\");\r\n                return\r\n            } else if (p.nick.length > 10) {\r\n                setErrorMessage(\"*Please input a nickname under 10 characters\")\r\n                setNick(\"\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        setNick(\"\");\r\n        setShowSuccess(false);\r\n        capture(p);\r\n        setErrorMessage(\"\");\r\n        e.preventDefault();\r\n    }\r\n\r\n    const handleEnter = (e) => {\r\n        console.log(\"key handler\")\r\n        if (e.key === \"Enter\") {\r\n            setNick(e.target.value);\r\n            handleConfirm();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className={\"media-adjust\"}>\r\n                <Col xs={12} sm={5}>\r\n                    <Container className=\"poke-info sticky-top\">\r\n                        <h4 className=\"text-adjust mark\">{pokeID}</h4>\r\n                        <h2 className=\"text-adjust text-center text-uppercase display-4 font-weight-bold\">{pokemon.name}</h2>\r\n                        <Row>\r\n                            {types? types.map((t => <Col className=\"text-center\"><h4 className={\"text-adjust poke-type align-middle poke-\" + t.type.name}>{t.type.name}</h4></Col>)) : null }\r\n                        </Row>\r\n                        <img className=\"mx-auto d-block img-adjust\" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`} alt={pokemon.name} />\r\n                        <Button className={\"mx-auto d-block catch-button poke-\" + types[0].type.name + \"-dark shadow-none text-adjust\"} size=\"lg\" onClick={catchPokemon} >Catch the Pokemon!</Button>\r\n                    </Container>\r\n                </Col>\r\n                <Col xs={12} sm={7}>\r\n                    <h1 className=\"sticky-top text-adjust\">Moves</h1>\r\n                    <Container className={\"moves-list poke-\" + types[0].type.name}>\r\n                        <CardColumns className={\"card-column-style\"}>\r\n                            {moves? (moves.map((m => <Card className={\"card-style poke-\" + types[0].type.name + \"-light\"}> <Card.Body className=\"text-capitalize text-adjust font-weight-bold\"> {(m.move.name).replace('-', ' ')} </Card.Body> </Card>))): null}\r\n                        </CardColumns>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Modal\r\n                show = {showSuccess}\r\n                onHide = {handleCloseSuccess}\r\n                backdrop = \"static\"\r\n                keyboard = {false}\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>POKEMON CAUGHT</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h2 className=\"text-center\">You caught a {pokemon.name}!</h2>\r\n                    <Form onSubmit={handleConfirm} >\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Enter nickname\" \r\n                            className=\"mr-sm-2\" \r\n                            value={nick} \r\n                            onChange={e => setNick(e.target.value)}\r\n                            onKeyPress={handleEnter}\r\n                        />\r\n                        <Form.Text className=\"text-danger text-smaller\">{errorMessage}</Form.Text>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseSuccess}>\r\n                        Release\r\n                    </Button>\r\n                    <Button variant=\"success\" onClick={handleConfirm}>Confirm</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={showFailed} onHide = {handleCloseFailed} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>POKEMON NOT CAUGHT</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h2 className=\"text-center\">Try again next time</h2>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseFailed}>\r\n                        Ok\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PokeDetails;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nimport PokeDetails from './PokeDetails';\r\nimport Loader from './Loader';\r\n\r\nconst apiURL = 'https://pokeapi.co/api/v2/pokemon/';\r\n\r\nconst PokeInfo = () => {\r\n    let { pokeID } = useParams();\r\n    let [pokemon, setPokemon] = useState([]);\r\n    const [isFetching, setIsFetching] = useState(true);\r\n\r\n    useEffect(() => {        \r\n        const fetchPokemon = async (pokeID) => {\r\n            const response = await fetch(apiURL + pokeID + \"/\");\r\n            const data = await response.json();\r\n            const poke = {\r\n                id: data.id,\r\n                name: data.name,\r\n                types: data.types,\r\n                moves: data.moves\r\n            }\r\n\r\n            await setPokemon(poke);\r\n            await setIsFetching(false);\r\n        }\r\n        \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        fetchPokemon(pokeID);\r\n    }, [])\r\n\r\n    if(pokemon === [] || !pokemon) {\r\n        return <Loader />;\r\n    }\r\n\r\n    if(pokeID > 898) {\r\n        return (\r\n            <Jumbotron className={\"position-fixed poke-info-cont\"}>\r\n                <h1 className=\"text-center align-center\">No pokemon with that ID found</h1>\r\n            </Jumbotron>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isFetching? <Loader /> : \r\n                (<Jumbotron className={\"position-fixed poke-info-cont poke-\" + pokemon.types[0].type.name + \"-light pt-3\"}>\r\n                    <PokeDetails pokemon={pokemon} />\r\n                </Jumbotron>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PokeInfo;","import React, { useContext, useState } from 'react';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport { PokeContext } from './PokeContext';\r\n\r\nconst MyPokemon = ({pokemon}) => {\r\n    let types = pokemon.types;\r\n    const { release } = useContext(PokeContext);\r\n    \r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const showModal = () => setShow(true);\r\n\r\n    const releasePokemon = () => {\r\n        release(pokemon);\r\n        handleClose();\r\n    }\r\n\r\n    return <>\r\n        <Row>\r\n            <Col xs={12} sm={2}>\r\n            <img className=\"mx-auto d-block my-poke-img\" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.pid}.png`} alt={pokemon.name} />\r\n            </Col>\r\n            <Col xs={9} sm={8}>\r\n                <Row>\r\n                    <h3 className=\"text-adjust display-4 font-weight-bold\">{pokemon.nick}</h3>\r\n                </Row>\r\n                <Row>\r\n                    <div className=\"text-adjust font-italic\">{pokemon.name}</div>\r\n                </Row>\r\n                <Row className=\"mt-2\">\r\n                {types? types.map((t => <Col xs={4} sm={2} className=\"text-center\"><div className={\"text-adjust text-capitalize poke-type float-left poke-\" + t.type.name}>{t.type.name}</div></Col>)) : null }\r\n                    <Col xs />\r\n                </Row>\r\n            </Col>\r\n            <Col xs={3} sm={2} className=\"bt-release-cont\">\r\n                <Button className=\"float-right bt-release\" variant=\"danger\" onClick={showModal}> \r\n                    <span aria-hidden=\"true\" className=\"font-weight-bolder\">X</span>\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Modal\r\n            show = {show}\r\n            onHide = {handleClose}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>POKEMON CAUGHT</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <h2 className=\"text-center\">Do you want to release [{pokemon.nick}]?</h2>\r\n                <img className=\"mx-auto d-block img-adjust\" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.pid}.png`} alt={pokemon.name} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Row style={{'width' : '100%'}}>\r\n                    <Col xs={6} className=\"text-center\">\r\n                        <Button variant=\"secondary\" onClick={handleClose} block>\r\n                            Don't Release\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={6} className=\"text-center\">\r\n                        <Button variant=\"danger\" onClick={releasePokemon} block>Release</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nexport default MyPokemon;","import React, {useContext} from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nimport {PokeContext} from './PokeContext';\r\nimport MyPokemon from './MyPokemon';\r\n\r\nconst MyPokemonList = () => {\r\n    const { capturedPokemons } = useContext(PokeContext);\r\n\r\n    let myPokeList;\r\n    if (!capturedPokemons || capturedPokemons.length === 0) {\r\n        return (\r\n            <Jumbotron className=\"position-fixed my-poke-container py-5\">\r\n                <h1 className=\"text-center\">No pokemon caught!</h1>\r\n            </Jumbotron>     \r\n        );\r\n    } else {\r\n        myPokeList = capturedPokemons.map(poke => {\r\n            return <>\r\n                <Card className=\"my-5\">\r\n                    <Card.Body>\r\n                        <MyPokemon pokemon = {poke} />\r\n                    </Card.Body>\r\n                </Card>\r\n            </>\r\n        })\r\n    }\r\n\r\n    if (!myPokeList) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Jumbotron className=\"position-fixed my-poke-container py-5\">\r\n            <h1 className=\"sticky-top text-center text-adjust display-2 mark\">My Pokemon</h1>\r\n            <Container className=\"my-poke-list\">\r\n                {myPokeList}\r\n            </Container>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default MyPokemonList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Jumbotron className=\"text-center not-found-cont position-fixed\">\r\n            <h1 className=\"display-2\">Page not found.</h1>\r\n            <Link to=\"/pokedex/\" >🡨 go back to home</Link>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default NotFound;","export default __webpack_public_path__ + \"static/media/Pokeball.e57f7ae6.svg\";","export default __webpack_public_path__ + \"static/media/Bag.0e35bde5.svg\";","import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nimport PokeList from './PokeList';\r\nimport PokeInfo from './PokeInfo';\r\nimport MyPokemonList from './MyPokemonList';\r\nimport NotFound from './NotFound';\r\nimport { PokeContext } from './PokeContext';\r\nimport logo from '../assets/Pokeball.svg';\r\nimport bag from '../assets/Bag.svg';\r\n\r\nconst apiURL = 'https://pokeapi.co/api/v2/pokemon/?limit=12&offset=';\r\n\r\nconst Header = () => {\r\n    const { capturedPokemons } = useContext(PokeContext);\r\n    const [pokemon, setPokemon] = useState([]);\r\n    const [nCaptured, setNCaptured] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [isFetching, setIsFetching] = useState(false);\r\n    const [morePage, setMorePage] = useState (true);\r\n    \r\n    const fetchPokemons = async () => {\r\n        let offset = (page-1) * 12;\r\n        const response = await fetch(apiURL + offset);\r\n        const data = await response.json();\r\n\r\n        data.results.forEach ( function(poke) {\r\n            if (!pokemon.includes(poke)) {\r\n                fetchPokemon (poke);\r\n            }\r\n        })\r\n        \r\n        setIsFetching(false);\r\n    };\r\n    \r\n    const fetchPokemon = async (pokemon) => {\r\n        const response = await fetch(pokemon.url);\r\n        const data = await response.json();\r\n        const poke = {\r\n            id: data.id,\r\n            name: data.name,\r\n            types: data.types,\r\n            moves: data.moves,\r\n        }\r\n        \r\n        if (data.id > 898) {\r\n            setMorePage(false);\r\n            return\r\n        }\r\n        \r\n        await setPokemon( temp => [... temp, poke]);\r\n        \r\n    }\r\n    \r\n    const infiniteScroll = () => {\r\n        if (window.innerHeight + document.documentElement.scrollTop\r\n        === (document.documentElement.offsetHeight) && morePage){\r\n\r\n            console.log('infinite scroll called');\r\n            setIsFetching(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', infiniteScroll);\r\n\r\n        setPage(2);\r\n    \r\n        fetchPokemons();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        return () => window.removeEventListener('scroll', infiniteScroll);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!isFetching) return;\r\n        if(isFetching){\r\n            let newPage = page;\r\n            newPage++;\r\n            setPage(newPage);\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n            fetchPokemons();\r\n        }\r\n    }, [isFetching]);\r\n\r\n    useEffect(() => {\r\n        if (capturedPokemons || capturedPokemons.length > 0) {\r\n            setNCaptured(capturedPokemons.length);\r\n        }\r\n    }, [capturedPokemons])\r\n\r\n    return(\r\n        <>\r\n            <Navbar variant=\"dark-red drop-shadow-bold\" sticky=\"top\">\r\n                <Link to=\"/pokedex/\">\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        overlay={\r\n                            <Tooltip id=\"my-pokemon\">\r\n                                Open Pokedex\r\n                            </Tooltip>\r\n                        }\r\n                    >\r\n                        <Navbar.Brand>\r\n                            <img \r\n                                alt=\"\"\r\n                                src={logo}\r\n                                width=\"45\"\r\n                                height=\"45\"\r\n                                className=\"d-inline-block align-top drop-shadow\"\r\n                            />{''}\r\n                            <h2 className=\"d-inline-block pl-2 navbar-item\">Pokemon</h2>\r\n                        </Navbar.Brand>\r\n                    </OverlayTrigger>\r\n                </Link>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Link to={`pokedex//my-pokemon`}>\r\n                        <OverlayTrigger\r\n                            placement=\"bottom\"\r\n                            overlay={\r\n                                <Tooltip id=\"my-pokemon\">\r\n                                    Check My Pokemon\r\n                                </Tooltip>\r\n                            }\r\n                        >\r\n                            <Navbar.Brand>\r\n                                <img \r\n                                    alt=\"\"\r\n                                    src={bag}\r\n                                    width=\"50\"\r\n                                    height=\"50\"\r\n                                    className=\"drop-shadow\"\r\n                                />\r\n                                <Badge variant=\"primary\" className=\"align-top text-captured\" pill><span className=\"align-middle\">{nCaptured}</span></Badge>\r\n                            </Navbar.Brand>\r\n                        </OverlayTrigger>\r\n                    </Link>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n            <Switch>\r\n                <Route exact path=\"/pokedex/\">\r\n                    <PokeList pokemons={pokemon} />\r\n                </Route>\r\n                <Route path=\"/pokedex/:pokeID\">\r\n                    <PokeInfo />\r\n                </Route>\r\n                <Route path=\"/pokedex/my-pokemon\">\r\n                    <MyPokemonList />\r\n                </Route>\r\n                <Route render={() => <Redirect to={{pathname: \"/not-found\"}} />}>\r\n                    <NotFound />\r\n                </Route>\r\n            </Switch>   \r\n        </ >\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { PokeProvider } from './PokeContext';\nimport Header from './Header';\n\nimport '../style/App.css';\n\nfunction App() {\n  return (\n    <PokeProvider>\n      <Router>\n        <Header />\n      </Router>\n    </PokeProvider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n        console.log('using localhost');\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}